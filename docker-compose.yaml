version: '3'
services:

  db:
    # 起動イメージ
    image: mysql:5.7
    # 起動時のコンテナ名の明示
    container_name: mysql
    # 起動時にコンテナが読み込む環境変数(個人で作成した、/express-app/mysql/.envを参照)
    env_file:
      - ./attendance-express-app/app.env
    # ホスト側のポート：コンテナのポート
    ports:
      - '3306:3306'
    # 内部ネットワーク設定　必要ないが一応記載
    networks:
      - default
    # ホスト側のmysqlをコンテナのdbにマウント
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/sql:/docker-entrypoint-initdb.d

  attendance_app:
    # 起動イメージ
    image: node:16.15.0
    # 起動時のコンテナ名の明示
    container_name: attendance_app
    # 起動時にコンテナが読み込む環境変数
    env_file:
      - ./attendance-express-app/app.env
    tty: true
    # ホスト側のポート：コンテナのポート
    ports:
      - '3000:3000'
    # 内部ネットワーク設定　必要ないが一応記載
    networks:
      - default
    # ホスト側のsrcをコンテナのappにマウント
    volumes:
      - ./attendance-express-app:/app
    # 起動時のカレントフォルダ
    working_dir: /app
    # 起動後に実行するコマンド
    command: bash -c 'npm install; npm run dev'
    # MySQLコンテナとの依存関係
    depends_on:
      - db

  schedule_app:
    # 起動イメージ
    image: node:16.15.0
    # 起動時のコンテナ名の明示
    container_name: schedule_app
    # 起動時にコンテナが読み込む環境変数(個人で作成した、/express-app/src/config/.envを参照)
    env_file:
      - ./schedule-express-app/app.env
    tty: true
    # ホスト側のポート：コンテナのポート
    ports:
      - '3001:3001'
    # 内部ネットワーク設定　必要ないが一応記載
    networks:
      - default
    # ホスト側のsrcをコンテナのappにマウント
    volumes:
      - ./schedule-express-app:/app
    # 起動時のカレントフォルダ
    working_dir: /app
    # 起動後に実行するコマンド
    command: bash -c 'npm install; npm run dev'
    # MySQLコンテナとの依存関係
    depends_on:
      - db

networks:
  default:
